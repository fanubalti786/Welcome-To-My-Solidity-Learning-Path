{
	"id": "3ec99f8dd3752429a8714dd5ac45938b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/17-continue-and-break.sol": {
				"content": "// SPDX-Licence-Identifier: GPL-3.0;\n\npragma solidity ^0.8.0;\n\ncontract Loops {\n    function forLoop() public pure returns (uint256) {\n        uint256 count = 0;\n        for (uint256 i = 0; i < 10; i += 2) {\n            // Skip the current iteration and continue to the next loop cycle\n\n            if (i == 8) {\n                continue;\n            }\n            count += 5;\n        }\n\n        return count;\n    }\n\n    function whileLoop() public pure returns (uint256) {\n        uint256 count = 0;\n\n        uint256 j = 0;\n\n        while (j < 10) {\n            if (j == 6) {\n                // Exit the loop immediately\n                break;\n            }\n            count += 5;\n            j += 2;\n        }\n\n        return count;\n    }\n\n    function dowhileLoop() public pure returns (uint256) {\n        uint256 count = 0;\n        uint256 k = 0;\n\n        do {\n            count += 5;\n            k += 2;\n            // Exit the loop immediately\n\n            break;\n        } while (k < 10);\n\n        return count;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/17-continue-and-break.sol": {
				"Loops": {
					"abi": [
						{
							"inputs": [],
							"name": "dowhileLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/17-continue-and-break.sol\":63:1027  contract Loops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/17-continue-and-break.sol\":63:1027  contract Loops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x28eb7ef3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe7c898ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc0e6008\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/17-continue-and-break.sol\":747:1025  function dowhileLoop() public pure returns (uint256) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/17-continue-and-break.sol\":421:741  function whileLoop() public pure returns (uint256) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/17-continue-and-break.sol\":84:415  function forLoop() public pure returns (uint256) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/17-continue-and-break.sol\":747:1025  function dowhileLoop() public pure returns (uint256) {... */\n    tag_7:\n        /* \"contracts/17-continue-and-break.sol\":791:798  uint256 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":810:823  uint256 count */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":826:827  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":810:827  uint256 count = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":837:846  uint256 k */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":849:850  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":837:850  uint256 k = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":887:888  5 */\n      0x05\n        /* \"contracts/17-continue-and-break.sol\":878:888  count += 5 */\n      dup3\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n        /* \"contracts/17-continue-and-break.sol\":907:908  2 */\n      0x02\n        /* \"contracts/17-continue-and-break.sol\":902:908  k += 2 */\n      dup2\n      tag_22\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_22:\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":1013:1018  count */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":1006:1018  return count */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/17-continue-and-break.sol\":747:1025  function dowhileLoop() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/17-continue-and-break.sol\":421:741  function whileLoop() public pure returns (uint256) {... */\n    tag_11:\n        /* \"contracts/17-continue-and-break.sol\":463:470  uint256 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":482:495  uint256 count */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":498:499  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":482:499  uint256 count = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":510:519  uint256 j */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":522:523  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":510:523  uint256 j = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":534:712  while (j < 10) {... */\n    tag_24:\n        /* \"contracts/17-continue-and-break.sol\":545:547  10 */\n      0x0a\n        /* \"contracts/17-continue-and-break.sol\":541:542  j */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":541:547  j < 10 */\n      lt\n        /* \"contracts/17-continue-and-break.sol\":534:712  while (j < 10) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/17-continue-and-break.sol\":572:573  6 */\n      0x06\n        /* \"contracts/17-continue-and-break.sol\":567:568  j */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":567:573  j == 6 */\n      sub\n        /* \"contracts/17-continue-and-break.sol\":563:658  if (j == 6) {... */\n      iszero\n        /* \"contracts/17-continue-and-break.sol\":638:643  break */\n      tag_25\n        /* \"contracts/17-continue-and-break.sol\":563:658  if (j == 6) {... */\n      jumpi\n        /* \"contracts/17-continue-and-break.sol\":680:681  5 */\n      0x05\n        /* \"contracts/17-continue-and-break.sol\":671:681  count += 5 */\n      dup3\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      swap2\n      pop\n        /* \"contracts/17-continue-and-break.sol\":700:701  2 */\n      0x02\n        /* \"contracts/17-continue-and-break.sol\":695:701  j += 2 */\n      dup2\n      tag_28\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_28:\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":534:712  while (j < 10) {... */\n      jump(tag_24)\n    tag_25:\n        /* \"contracts/17-continue-and-break.sol\":729:734  count */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":722:734  return count */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/17-continue-and-break.sol\":421:741  function whileLoop() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/17-continue-and-break.sol\":84:415  function forLoop() public pure returns (uint256) {... */\n    tag_14:\n        /* \"contracts/17-continue-and-break.sol\":124:131  uint256 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":143:156  uint256 count */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":159:160  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":143:160  uint256 count = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":175:184  uint256 i */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":187:188  0 */\n      0x00\n        /* \"contracts/17-continue-and-break.sol\":175:188  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":170:386  for (uint256 i = 0; i < 10; i += 2) {... */\n    tag_30:\n        /* \"contracts/17-continue-and-break.sol\":194:196  10 */\n      0x0a\n        /* \"contracts/17-continue-and-break.sol\":190:191  i */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":190:196  i < 10 */\n      lt\n        /* \"contracts/17-continue-and-break.sol\":170:386  for (uint256 i = 0; i < 10; i += 2) {... */\n      iszero\n      tag_31\n      jumpi\n        /* \"contracts/17-continue-and-break.sol\":308:309  8 */\n      0x08\n        /* \"contracts/17-continue-and-break.sol\":303:304  i */\n      dup2\n        /* \"contracts/17-continue-and-break.sol\":303:309  i == 8 */\n      sub\n        /* \"contracts/17-continue-and-break.sol\":299:352  if (i == 8) {... */\n      iszero\n        /* \"contracts/17-continue-and-break.sol\":329:337  continue */\n      tag_32\n        /* \"contracts/17-continue-and-break.sol\":299:352  if (i == 8) {... */\n      jumpi\n        /* \"contracts/17-continue-and-break.sol\":374:375  5 */\n      0x05\n        /* \"contracts/17-continue-and-break.sol\":365:375  count += 5 */\n      dup3\n      tag_34\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_34:\n      swap2\n      pop\n        /* \"contracts/17-continue-and-break.sol\":170:386  for (uint256 i = 0; i < 10; i += 2) {... */\n    tag_32:\n        /* \"contracts/17-continue-and-break.sol\":203:204  2 */\n      0x02\n        /* \"contracts/17-continue-and-break.sol\":198:204  i += 2 */\n      dup2\n      tag_35\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_35:\n      swap1\n      pop\n        /* \"contracts/17-continue-and-break.sol\":170:386  for (uint256 i = 0; i < 10; i += 2) {... */\n      jump(tag_30)\n    tag_31:\n      pop\n        /* \"contracts/17-continue-and-break.sol\":403:408  count */\n      dup1\n        /* \"contracts/17-continue-and-break.sol\":396:408  return count */\n      swap2\n      pop\n      pop\n        /* \"contracts/17-continue-and-break.sol\":84:415  function forLoop() public pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_36:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_37:\n        /* \"#utility.yul\":177:201   */\n      tag_42\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_36\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_44\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_38:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:819   */\n    tag_21:\n        /* \"#utility.yul\":668:671   */\n      0x00\n        /* \"#utility.yul\":687:707   */\n      tag_47\n        /* \"#utility.yul\":705:706   */\n      dup3\n        /* \"#utility.yul\":687:707   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":682:707   */\n      swap2\n      pop\n        /* \"#utility.yul\":721:741   */\n      tag_48\n        /* \"#utility.yul\":739:740   */\n      dup4\n        /* \"#utility.yul\":721:741   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":716:741   */\n      swap3\n      pop\n        /* \"#utility.yul\":764:765   */\n      dup3\n        /* \"#utility.yul\":761:762   */\n      dup3\n        /* \"#utility.yul\":757:766   */\n      add\n        /* \"#utility.yul\":750:766   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:788   */\n      dup1\n        /* \"#utility.yul\":782:783   */\n      dup3\n        /* \"#utility.yul\":779:789   */\n      gt\n        /* \"#utility.yul\":776:812   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":792:810   */\n      tag_50\n      tag_38\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":776:812   */\n    tag_49:\n        /* \"#utility.yul\":628:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220633bf34ff0619d54a62ec09eec9f2d99da4bc13cc1de5f6087ace4c0485dc47964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102228061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806328eb7ef314610043578063e7c898ef14610061578063fc0e60081461007f575b5f5ffd5b61004b61009d565b6040516100589190610173565b60405180910390f35b6100696100cc565b6040516100769190610173565b60405180910390f35b610087610113565b6040516100949190610173565b60405180910390f35b5f5f5f90505f5f90506005826100b391906101b9565b91506002816100c291906101b9565b9050819250505090565b5f5f5f90505f5f90505b600a81101561010b57600681031561010b576005826100f591906101b9565b915060028161010491906101b9565b90506100d6565b819250505090565b5f5f5f90505f5f90505b600a81101561015357600881031561013f5760058261013c91906101b9565b91505b60028161014c91906101b9565b905061011d565b508091505090565b5f819050919050565b61016d8161015b565b82525050565b5f6020820190506101865f830184610164565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6101c38261015b565b91506101ce8361015b565b92508282019050808211156101e6576101e561018c565b5b9291505056fea2646970667358221220633bf34ff0619d54a62ec09eec9f2d99da4bc13cc1de5f6087ace4c0485dc47964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x222 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x28EB7EF3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x5 DUP3 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x10B JUMPI PUSH1 0x6 DUP2 SUB ISZERO PUSH2 0x10B JUMPI PUSH1 0x5 DUP3 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x153 JUMPI PUSH1 0x8 DUP2 SUB ISZERO PUSH2 0x13F JUMPI PUSH1 0x5 DUP3 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C3 DUP3 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x18C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x3BF34FF0 PUSH2 0x9D54 0xA6 0x2E 0xC0 SWAP15 EOFCREATE 0x9F 0x2D SWAP10 0xDA 0x4B 0xC1 EXTCODECOPY 0xC1 0xDE PUSH0 PUSH1 0x87 0xAC RETF 0xC0 BASEFEE TSTORE 0xC4 PUSH26 0x64736F6C634300081E0033000000000000000000000000000000 ",
							"sourceMap": "63:964:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@dowhileLoop_101": {
									"entryPoint": 157,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@forLoop_36": {
									"entryPoint": 275,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whileLoop_71": {
									"entryPoint": 204,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:822:1",
										"nodeType": "YulBlock",
										"src": "0:822:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "672:147:1",
													"nodeType": "YulBlock",
													"src": "672:147:1",
													"statements": [
														{
															"nativeSrc": "682:25:1",
															"nodeType": "YulAssignment",
															"src": "682:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "705:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "687:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "687:17:1"
																},
																"nativeSrc": "687:20:1",
																"nodeType": "YulFunctionCall",
																"src": "687:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "682:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "682:1:1"
																}
															]
														},
														{
															"nativeSrc": "716:25:1",
															"nodeType": "YulAssignment",
															"src": "716:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "739:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "739:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "721:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "721:17:1"
																},
																"nativeSrc": "721:20:1",
																"nodeType": "YulFunctionCall",
																"src": "721:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "716:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "716:1:1"
																}
															]
														},
														{
															"nativeSrc": "750:16:1",
															"nodeType": "YulAssignment",
															"src": "750:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "761:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "761:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "764:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "764:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nativeSrc": "757:9:1",
																"nodeType": "YulFunctionCall",
																"src": "757:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "790:22:1",
																"nodeType": "YulBlock",
																"src": "790:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "792:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:16:1"
																			},
																			"nativeSrc": "792:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "792:18:1"
																		},
																		"nativeSrc": "792:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "792:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "782:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "785:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "785:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "779:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "779:2:1"
																},
																"nativeSrc": "779:10:1",
																"nodeType": "YulFunctionCall",
																"src": "779:10:1"
															},
															"nativeSrc": "776:36:1",
															"nodeType": "YulIf",
															"src": "776:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "628:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "659:1:1",
														"nodeType": "YulTypedName",
														"src": "659:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "662:1:1",
														"nodeType": "YulTypedName",
														"src": "662:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "668:3:1",
														"nodeType": "YulTypedName",
														"src": "668:3:1",
														"type": ""
													}
												],
												"src": "628:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806328eb7ef314610043578063e7c898ef14610061578063fc0e60081461007f575b5f5ffd5b61004b61009d565b6040516100589190610173565b60405180910390f35b6100696100cc565b6040516100769190610173565b60405180910390f35b610087610113565b6040516100949190610173565b60405180910390f35b5f5f5f90505f5f90506005826100b391906101b9565b91506002816100c291906101b9565b9050819250505090565b5f5f5f90505f5f90505b600a81101561010b57600681031561010b576005826100f591906101b9565b915060028161010491906101b9565b90506100d6565b819250505090565b5f5f5f90505f5f90505b600a81101561015357600881031561013f5760058261013c91906101b9565b91505b60028161014c91906101b9565b905061011d565b508091505090565b5f819050919050565b61016d8161015b565b82525050565b5f6020820190506101865f830184610164565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6101c38261015b565b91506101ce8361015b565b92508282019050808211156101e6576101e561018c565b5b9291505056fea2646970667358221220633bf34ff0619d54a62ec09eec9f2d99da4bc13cc1de5f6087ace4c0485dc47964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x28EB7EF3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x5 DUP3 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x10B JUMPI PUSH1 0x6 DUP2 SUB ISZERO PUSH2 0x10B JUMPI PUSH1 0x5 DUP3 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x153 JUMPI PUSH1 0x8 DUP2 SUB ISZERO PUSH2 0x13F JUMPI PUSH1 0x5 DUP3 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186 PUSH0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C3 DUP3 PUSH2 0x15B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x15B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x18C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x3BF34FF0 PUSH2 0x9D54 0xA6 0x2E 0xC0 SWAP15 EOFCREATE 0x9F 0x2D SWAP10 0xDA 0x4B 0xC1 EXTCODECOPY 0xC1 0xDE PUSH0 PUSH1 0x87 0xAC RETF 0xC0 BASEFEE TSTORE 0xC4 PUSH26 0x64736F6C634300081E0033000000000000000000000000000000 ",
							"sourceMap": "63:964:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:278;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:320;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;84:331;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;747:278;791:7;810:13;826:1;810:17;;837:9;849:1;837:13;;887:1;878:10;;;;;:::i;:::-;;;907:1;902:6;;;;;:::i;:::-;;;1013:5;1006:12;;;;747:278;:::o;421:320::-;463:7;482:13;498:1;482:17;;510:9;522:1;510:13;;534:178;545:2;541:1;:6;534:178;;;572:1;567;:6;563:95;638:5;563:95;680:1;671:10;;;;;:::i;:::-;;;700:1;695:6;;;;;:::i;:::-;;;534:178;;;729:5;722:12;;;;421:320;:::o;84:331::-;124:7;143:13;159:1;143:17;;175:9;187:1;175:13;;170:216;194:2;190:1;:6;170:216;;;308:1;303;:6;299:53;329:8;299:53;374:1;365:10;;;;;:::i;:::-;;;170:216;203:1;198:6;;;;;:::i;:::-;;;170:216;;;;403:5;396:12;;;84:331;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:191;668:3;687:20;705:1;687:20;:::i;:::-;682:25;;721:20;739:1;721:20;:::i;:::-;716:25;;764:1;761;757:9;750:16;;785:3;782:1;779:10;776:36;;;792:18;;:::i;:::-;776:36;628:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "109200",
								"executionCost": "157",
								"totalCost": "109357"
							},
							"external": {
								"dowhileLoop()": "infinite",
								"forLoop()": "infinite",
								"whileLoop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1027,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220633bf34ff0619d54a62ec09eec9f2d99da4bc13cc1de5f6087ace4c0485dc47964736f6c634300081e0033",
									".code": [
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "28EB7EF3"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E6008"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 747,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 747,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 84,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 878,
											"end": 888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 878,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 902,
											"end": 908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 902,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 902,
											"end": 908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1018,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 534,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 547,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 534,
											"end": 712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 534,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 563,
											"end": 658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 638,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 563,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 671,
											"end": 681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 671,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 671,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 671,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 695,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 695,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 534,
											"end": 712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 534,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 722,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 722,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 84,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 170,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 190,
											"end": 191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 190,
											"end": 196,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 170,
											"end": 386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 308,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 299,
											"end": 352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 329,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 299,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 365,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 170,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 198,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 198,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 198,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 170,
											"end": 386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 170,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 628,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 705,
											"end": 706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 687,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 721,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 779,
											"end": 789,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 792,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/17-continue-and-break.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"dowhileLoop()": "28eb7ef3",
							"forLoop()": "fc0e6008",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"dowhileLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/17-continue-and-break.sol\":\"Loops\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/17-continue-and-break.sol\":{\"keccak256\":\"0xb28f7dd051332aaf7dfc56f204517ef53da0a6eebaf6ab97f1198df378dd5c6c\",\"urls\":[\"bzz-raw://d354b383a94c1fc733856e7282b73124fdbfdc5e3f452b54cda446d915ca815c\",\"dweb:/ipfs/QmUTfYyaW9Tu4DU67GKJWJZLpj63AUcrwongnPbXTWjwfJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/17-continue-and-break.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/17-continue-and-break.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n  --> contracts/17-continue-and-break.sol:47:18:\n   |\n47 |         } while (k < 10);\n   |                  ^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 994,
					"file": "contracts/17-continue-and-break.sol",
					"start": 988
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/17-continue-and-break.sol": {
				"ast": {
					"absolutePath": "contracts/17-continue-and-break.sol",
					"exportedSymbols": {
						"Loops": [
							102
						]
					},
					"id": 103,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loops",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "Loops",
							"nameLocation": "72:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "133:282:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "151:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 35,
														"src": "143:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"hexValue": "30",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "159:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "143:17:0"
											},
											{
												"body": {
													"id": 31,
													"nodeType": "Block",
													"src": "206:180:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 21,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 26,
															"nodeType": "IfStatement",
															"src": "299:53:0",
															"trueBody": {
																"id": 25,
																"nodeType": "Block",
																"src": "311:41:0",
																"statements": [
																	{
																		"id": 24,
																		"nodeType": "Continue",
																		"src": "329:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 27,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "35",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "365:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "365:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "194:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 32,
												"initializationExpression": {
													"assignments": [
														11
													],
													"declarations": [
														{
															"constant": false,
															"id": 11,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "183:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 32,
															"src": "175:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 10,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 13,
													"initialValue": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "175:13:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 17,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "32",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "198:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ExpressionStatement",
													"src": "198:6:0"
												},
												"nodeType": "ForStatement",
												"src": "170:216:0"
											},
											{
												"expression": {
													"id": 33,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 34,
												"nodeType": "Return",
												"src": "396:12:0"
											}
										]
									},
									"functionSelector": "fc0e6008",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forLoop",
									"nameLocation": "93:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:9:0"
									},
									"scope": 102,
									"src": "84:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "472:269:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "490:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "482:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"hexValue": "30",
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "498:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "482:17:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "518:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "510:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"hexValue": "30",
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "522:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "510:13:0"
											},
											{
												"body": {
													"id": 66,
													"nodeType": "Block",
													"src": "549:163:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "36",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "572:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"src": "567:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 57,
															"nodeType": "IfStatement",
															"src": "563:95:0",
															"trueBody": {
																"id": 56,
																"nodeType": "Block",
																"src": "575:83:0",
																"statements": [
																	{
																		"id": 55,
																		"nodeType": "Break",
																		"src": "638:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "671:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "35",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "671:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "671:10:0"
														},
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "695:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "695:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "695:6:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "545:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "541:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "WhileStatement",
												"src": "534:178:0"
											},
											{
												"expression": {
													"id": 68,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "729:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 69,
												"nodeType": "Return",
												"src": "722:12:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "430:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:9:0"
									},
									"scope": 102,
									"src": "421:320:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "800:225:0",
										"statements": [
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "818:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "810:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 76,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"hexValue": "30",
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "826:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "810:17:0"
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "845:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "837:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"hexValue": "30",
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "849:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "837:13:0"
											},
											{
												"body": {
													"id": 93,
													"nodeType": "Block",
													"src": "864:116:0",
													"statements": [
														{
															"expression": {
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 84,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "878:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "35",
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "878:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "878:10:0"
														},
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 88,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "902:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "902:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "902:6:0"
														},
														{
															"id": 92,
															"nodeType": "Break",
															"src": "964:5:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 94,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "992:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "DoWhileStatement",
												"src": "861:135:0"
											},
											{
												"expression": {
													"id": 98,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 77,
													"src": "1013:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 75,
												"id": 99,
												"nodeType": "Return",
												"src": "1006:12:0"
											}
										]
									},
									"functionSelector": "28eb7ef3",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dowhileLoop",
									"nameLocation": "756:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:9:0"
									},
									"scope": 102,
									"src": "747:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 103,
							"src": "63:964:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:990:0"
				},
				"id": 0
			}
		}
	}
}